//list of items is managed by the items state, and the handleReorder function is passed to the ReorderableList component to update the state when the order changes.

import React, { useState } from "react";
import ReorderableList from "./view";
import { ListItem } from "./model";

const ReorderableListContainer: React.FC = () => {
    const [items, setItems] = useState<ListItem[]>([ //items: An array containing the list items. Each item follows the structure defined by the ListItem interface: id - Unique identifier... content - Text displayed on the item. || setItems: A function used to update the items state when the order of the items changes. || useState: Initializes the list state with 5 items, defined as objects.
        { id: "1", content: "Item 1" },
        { id: "2", content: "Item 2" },
        { id: "3", content: "Item 3" },
        { id: "4", content: "Item 4" },
        { id: "5", content: "Item 5" },
    ]);

    const handleReorder = (newItems: ListItem[]) => {
        setItems(newItems);
    }; //Updates the items state with the new reordered array. Parameters: Receives newItems, which is the array of reordered items (generated by the ReorderableList component). Execution: Calls setItems to update the list state with the new order.

    return <ReorderableList items={items} onReorder={handleReorder} />;
}; //Renders the ReorderableList component and passes two properties (props) - items: The current state of the list, used to display the items in the component. onReorder: The handleReorder function, which is called by the child component (ReorderableList) when the order of the items changes.

export default ReorderableListContainer;